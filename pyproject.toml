[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lilya"
description = "Yet another ASGI toolkit that delivers"
long_description = "Yet another ASGI toolkit that delivers"
readme = "README.md"
requires-python = ">=3.8"
dynamic = ['version']
license = "MIT"
authors = [{ name = "Tiago Silva", email = "tiago.arasilva@gmail.com" }]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: AnyIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]
dependencies = [
    "anyio>=3.4.0,<5",
    "dymmond-settings>=1.0.3",
    "multidict>=6.0.4,<7.0.0",
    "typing_extensions>=3.10.0; python_version < '3.10'",
]
keywords = ["lilya"]

[project.urls]
Homepage = "https://github.com/dymmond/lilya"
Documentation = "https://lilya.dev"
Changelog = "https://lilya.dev/release-notes/"
Funding = "https://github.com/sponsors/tarsil"
Source = "https://github.com/dymmond/lilya"

[project.optional-dependencies]
all = [
    "click>=8.1.7,<9.0.0",
    "httpx>=0.22.0",
    "itsdangerous",
    "ipython",
    "jinja2",
    "python-multipart",
    "pyyaml",
    "nest_asyncio",
    "ptpython",
    "rich>=13.7.0,<15.0.0",
]

cli = [
    "click>=8.1.7,<9.0.0",
    "nest_asyncio>=1.6.0,<2.0.0",
    "rich>=13.7.0,<15.0.0",
]

test = [
    "a2wsgi>=1.10.0,<2.0.0",
    "autoflake>=2.0.2,<3.0.0",
    "anyio[trio]>=3.6.2,<5.0.0",
    "asyncio[trio]>=3.4.3,<4.0.0",
    "black==24.1.1,<25.0",
    "edgy[postgres]>=0.9.2,<1.0.0",
    "email-validator>=2.1.0.post1",
    "flask>=3.0.2,<4.0.0",
    "freezegun>=1.4.0,<2.0.0",
    "httpx>=0.25.2,<1.0.0",
    "isort>=5.12.0,<6.0.0",
    "jinja2>=3.1.3,<4.0.0",
    "mako>=1.3.2,<2.0.0",
    "msgspec>=0.18.6,<0.20.0",
    "mypy==1.8.0",
    "pydantic>=2.6.0,<3",
    "pytest>=7.2.2,<9.0.0",
    "pytest-asyncio>=0.23.2",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.12.0",
    "python-multipart>=0.0.6",
    "requests>=2.28.2",
    "ruff>=0.3.0,<5.0.0",
]

dev = ["ipdb>=0.13.13,<1.0.0", "pre-commit>=3.3.1,<4.0.0", "devtools>=0.12.2"]

doc = [
    "griffe-typingdoc>=0.2.2,<1.0",
    "mkautodoc>=0.2.0,<0.3.0",
    "mkdocs>=1.1.2,<2.0.0",
    "mkdocs-material>=9.4.4,<10.0.0",
    "mdx-include>=1.4.2,<2.0.0",
    "mkdocs-markdownextradata-plugin>=0.2.5,<0.3.0",
    "mkdocs-meta-descriptions-plugin>=2.3.0",
    "mkdocstrings[python]>=0.23.0,<0.30.0",
    "pyyaml>=6.0,<7.0.0",
]

ptpython = ["ptpython>=3.0.23"]
ipython = ["ipython>=8.10.0"]

[tool.hatch.version]
path = "lilya/__init__.py"

[project.scripts]
lilya = "lilya.__main__:run_cli"

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.isort]
profile = "black"
known_third_party = []
src_paths = ["lilya"]

[tool.mypy]
strict = true
warn_unused_configs = true
warn_unreachable = true
warn_return_any = true
disallow_untyped_decorators = true
disallow_any_generics = false
implicit_reexport = false
show_error_codes = true
disallow_incomplete_defs = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = false
strict_equality = false
strict_optional = false
disable_error_code = "attr-defined,has-type,override"
exclude = ["lilya/compat.py"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "I",
    "FA",
    "UP",
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "B026", # too complex
]

exclude = ["docs_src/"]

[tool.coverage.run]
parallel = true
context = '${CONTEXT}'
source = ["tests", "lilya"]
# omit = []

[[tool.mypy.overrides]]
module = ["multipart.*", "mako.*", "nest_asyncio.*", "uvicorn.*"]
ignore_missing_imports = true
ignore_errors = true

[[tool.mypy.overrides]]
module = "lilya.tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "docs_src.*"
ignore_errors = true

[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers"]
xfail_strict = true
junit_family = "xunit2"

[tool.hatch.build.targets.sdist]
include = ["/lilya"]
